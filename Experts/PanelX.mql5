//+------------------------------------------------------------------+
//|                                                       PanelX.mq5 |
//|                    Copyright 2023, Manuel Alejandro Cercos Perez |
//|                                  https://www.mql5.com/alexcercos |
//+------------------------------------------------------------------+
#property copyright "Copyright 2023, Manuel Alejandro Cercos Perez"
#property link      "https://www.mql5.com/alexcercos"
#property version   "1.00"

#include <PanelX\Basis.mqh>
#include <PanelX\Window.mqh>


//+------------------------------------------------------------------+
//| Входные параметры советника                                      |
//+------------------------------------------------------------------+
// окно //
input int      PanelWidth        = 1000;        // Ширина панели (пиксели)
input int      PanelHeight       = 1000;        // Высота панели (пиксели)
input color    PanelBgColor      = C'20,20,20'; // Цвет фона панели (темно-серый)
input color    PanelHeaderColor  = C'10,10,10'; // Цвет верхней полосы (очень темный)
input int      HeaderHeight      = 20;          // Высота заголовка (пиксели)
input int      ContentPadding    = 10;          // Внутренний отступ контента (пиксели)


CProgram program;

//+------------------------------------------------------------------+
//| Expert initialization function                                   |
//+------------------------------------------------------------------+
int OnInit()
{
   MathSrand((uint)TimeLocal());

   // Размещаем панель в центре экрана
   int max_x = (int)ChartGetInteger(0, CHART_WIDTH_IN_PIXELS) - PanelWidth;
   int max_y = (int)ChartGetInteger(0, CHART_HEIGHT_IN_PIXELS) - PanelHeight;

   // Создаем элемент с правильными параметрами
   CRaiseElement* drawing = new CRaiseElement(
      0,                     // ID элемента
      PanelWidth,            // Ширина
      PanelHeight,           // Высота 
      ContentPadding         // Внутренний отступ
   );
   
   drawing.SetPosition(max_x / 2, max_y / 2);
   program.AddMainElement(drawing);

   program.CreateGUI();
   ChartRedraw(0);
   return(INIT_SUCCEEDED);
}

//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
void OnTimer(void)
{
   program.OnTimer();
}

//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
void OnChartEvent(const int id, const long& lparam, const double& dparam, const string& sparam)
{
   program.OnChartEvent(id, lparam, dparam, sparam);
}
//+------------------------------------------------------------------+
